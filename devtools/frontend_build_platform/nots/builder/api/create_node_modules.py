from build.plugins.lib.nots.package_manager import (
    get_package_manager_type,
    PackageJson,
    utils as pm_utils,
)
from devtools.frontend_build_platform.libraries.logging import get_logger, timeit
from .models import BaseOptions
from .utils import copy_if_not_exists, extract_peer_tars


logger = get_logger(__name__)


@timeit
def create_node_modules(args: BaseOptions, original_lf_path=None):
    """Create node_modules directory in the $BINDIR"""
    # copy package.json from $S to $B
    copy_if_not_exists(pm_utils.build_pj_path(args.curdir), pm_utils.build_pj_path(args.bindir))

    pj = PackageJson.load(pm_utils.build_pj_path(args.bindir))

    if not pj.has_dependencies():
        return

    # peers
    extract_peer_tars(args.bindir)

    # noinspection PyPep8Naming
    PackageManager = get_package_manager_type(args.pm_type)

    pm = PackageManager(
        build_root=args.arcadia_build_root,
        build_path=args.bindir,
        sources_path=args.curdir,
        nodejs_bin_path=args.nodejs_bin,
        script_path=args.pm_script,
    )

    pm.create_node_modules(
        yatool_prebuilder_path=args.yatool_prebuilder_path,
        local_cli=args.local_cli,
        nm_bundle=args.nm_bundle,
        original_lf_path=original_lf_path,
    )
